<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  0. level features
-->

<network>
  <out name="features"/>
  <out name="energies"/>

  <param name="input-file"/>
  <param name="input-audio-name"/>
  <param name="id"/>
  <param name="track"/>
  <param name="start-time"/>
  <param name="end-time"/>
  <param name="speaker"/>

  <param name="audio-format"/>


<!--
  Signal
-->
  <node name="samples"
	filter="samples.flow"
	input-file="$(input-file)"
	start-time="$(start-time)" 
	end-time="$(end-time)" 
	track="$(track)"/>


<!--
  Common part of signal analysis
-->
  <node name="preemphasis" 
	filter="signal-preemphasis"
	alpha="1.00"/>
  <link from="samples:out" to="preemphasis"/>


  <node name="window" 
	filter="signal-window" 
	type="hamming" 
	shift="0.01" 
	length="0.025"/>
  <link from="preemphasis" to="window"/>


  <node name="fast-fourier-transform" 
	filter="signal-real-fast-fourier-transform"
	maximum-input-size="0.025"/>
  <link from="window" to="fast-fourier-transform"/>


  <node name="amplitude-spectrum" 
	filter="signal-vector-alternating-complex-f32-amplitude"/>
  <link from="fast-fourier-transform" to="amplitude-spectrum"/>



<!-- 
  Mfccs
-->
  <node name="filterbank" 
	filter="signal-filterbank"
	warping-function="mel" 
	filter-width="134.129"/>
  <link from="amplitude-spectrum" to="filterbank"/>


  <node name="nonlinear" 
	filter="generic-vector-f32-log"/>
  <link from="filterbank" to="nonlinear"/>


  <node name="cepstrum" 
	filter="signal-cosine-transform" 
	nr-outputs="40"/>
  <link from="nonlinear" to="cepstrum"/>


  <node name="feature-normalization" 
	filter="signal-normalization"
	type="mean-and-variance"/>
<!--
	length="infinite" 
	right="infinite"/>
-->
  <link from="cepstrum" to="feature-normalization"/>



<!-- 
  Energy
-->
  <node name="energy"
	filter="generic-vector-f32-norm"
	value="1"/>
  <link from="amplitude-spectrum" to="energy"/>


  <node name="convert-energy-to-vector"
	filter="generic-convert-f32-to-vector-f32"/>
  <link from="energy" to="convert-energy-to-vector"/>


  <node name="energy-normalization" 
	filter="signal-normalization"
	type="divide-by-mean"/>
<!--
	length="infinite" 
	right="infinite"/>
-->
  <link from="convert-energy-to-vector" to="energy-normalization"/>


  <node name="convert-energy-vector-to-scalar" 
	filter="generic-convert-vector-f32-to-f32"/>
  <link from="energy-normalization" to="convert-energy-vector-to-scalar"/>


  <node name="energy-synchronization"
	filter="generic-synchronization"/>
  <link from="cepstrum" to="energy-synchronization:target"/>
  <link from="convert-energy-vector-to-scalar" to="energy-synchronization"/>



<!--
	output the features
 -->
  <node name="feature-dump"
  	filter="generic-dump"/>
  <node name="energy-dump"
  	filter="generic-dump"/>
	

  <link from="feature-normalization" to="feature-dump"/>
  <link from="energy-synchronization" to="energy-dump"/>

<!--
  Output
-->
<!--
  <link from="mfcc-normalization" to="network:features"/>
  <link from="energy-synchronization" to="network:energies"/>
-->
  <link from="feature-dump" to="network:features"/>
  <link from="energy-dump" to="network:energies"/>

</network>
