<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  0. level features
-->

<network>
  <out name="features"/>
  <out name="energies"/>

  <param name="input-file"/>
  <param name="input-audio-name"/>
  <param name="id"/>
  <param name="track"/>
  <param name="start-time"/>
  <param name="end-time"/>
  <param name="speaker"/>


<!--
  Signal
-->
  <node name="samples"
	filter="samples.flow"
	input-file="$(input-file)" 
	start-time="$(start-time)" 
	end-time="$(end-time)" 
	track="$(track)"/>


<!--
  Common part of signal analysis
-->
  <node name="window" 
	filter="signal-window" 
	type="hamming" 
	shift=".01" 
	length="0.02"/>
  <link from="samples:out" to="window"/>


  <node name="fast-fourier-transform" 
	filter="signal-real-fast-fourier-transform"
	maximum-input-size="0.02"/>
  <link from="window" to="fast-fourier-transform"/>


  <node name="amplitude-spectrum" 
	filter="signal-vector-alternating-complex-f32-amplitude"/>
  <link from="fast-fourier-transform" to="amplitude-spectrum"/>


  <node name="power-spectrum" 
	filter="generic-vector-f32-power"
	value="2"/>
  <link from="amplitude-spectrum" to="power-spectrum"/>



<!-- 
  Unwarped Plps
-->
  <!-- 
	8000 Hz -> 19.708905 Bark; #filters 20 -> spacing = 0.93853
	4000 Hz -> 15.575071 Bark; #filters 15 -> spacing = 0.973442 
  -->
  <node name="unwarped-filterbank" 
	filter="signal-filterbank"
	type="trapeze" 
	filter-width="3.8" 
	spacing="0.93853" 
	boundary="include-boundary" 
	warping-function="bark"/>
  <link from="power-spectrum" to="unwarped-filterbank"/>


  <node name="unwarped-split-filterbank" 
	filter="generic-vector-f32-split"/>
  <link from="unwarped-filterbank" to="unwarped-split-filterbank"/>


  <node name="unwarped-reverse-split-filterbank" 
	filter="generic-vector-f32-split"
	reverse="true"/>
  <link from="unwarped-filterbank" to="unwarped-reverse-split-filterbank"/>


  <node name="unwarped-copy-first-last-filterbank" 
	filter="generic-vector-f32-concat"/>
  <link from="unwarped-split-filterbank:0" to="unwarped-copy-first-last-filterbank:first"/>
  <link from="unwarped-filterbank" to="unwarped-copy-first-last-filterbank:middle"/>
  <link from="unwarped-reverse-split-filterbank:0" to="unwarped-copy-first-last-filterbank:last"/>


  <node name="unwarped-equal-loudness-preemphasis" 
	filter="signal-vector-f32-continuous-transform"
	f="nest(nest(disc-to-cont, invert(bark)), equal-loudness-preemphasis)" 
	operation="multiplies"/>
  <link from="unwarped-copy-first-last-filterbank" to="unwarped-equal-loudness-preemphasis"/>


  <node name="unwarped-intensity-loudness-law" 
	filter="generic-vector-f32-power"
	value="0.33"/>
  <link from="unwarped-equal-loudness-preemphasis" to="unwarped-intensity-loudness-law"/>


  <node name="unwarped-autocorrelation" 
	filter="signal-cosine-transform"
	nr-outputs="17" 
	input-type="N-plus-one" 
	normalize="true"/>
  <link from="unwarped-intensity-loudness-law" to="unwarped-autocorrelation"/>


  <node name="unwarped-autoregression" 
	filter="signal-autocorrelation-to-autoregression"/>
  <link from="unwarped-autocorrelation" to="unwarped-autoregression"/>				


  <node name="unwarped-linear-prediction-cepstrum" 
	filter="signal-autoregression-to-cepstrum"
	nr-outputs="16"/>
  <link from="unwarped-autoregression" to="unwarped-linear-prediction-cepstrum"/>


  <node name="unwarped-normalization" 
	filter="signal-normalization"
	type="mean-and-variance"/>
<!--
	length="infinite" 
	right="infinite"/>
-->
  <link from="unwarped-linear-prediction-cepstrum" to="unwarped-normalization"/>


  <node name="unwarped-derivatives"
	filter="derivatives.regression.flow"/>
  <link from="unwarped-normalization" to="unwarped-derivatives:in"/>


  <node name="unwarped-split-deltadelta" 
	filter="generic-vector-f32-split"/>
  <link from="unwarped-derivatives:deltadelta" to="unwarped-split-deltadelta"/>


  <node name="unwarped-concatenation" 
	filter="generic-vector-f32-concat"
	check-same-length="true"/>
  <link from="unwarped-normalization" to="unwarped-concatenation:in"/>
  <link from="unwarped-derivatives:delta" to="unwarped-concatenation:delta"/>
  <link from="unwarped-split-deltadelta:0" to="unwarped-concatenation:deltadelta"/>


  <node name="unwarped-linear-transform" 
	filter="signal-matrix-multiplication-f32"/>
  <link from="unwarped-concatenation" to="unwarped-linear-transform"/>



<!-- 
  Energy
-->
  <node name="energy"
	filter="generic-vector-f32-norm"
	value="1"/>
  <link from="amplitude-spectrum" to="energy"/>


  <node name="convert-energy-to-vector"
	filter="generic-convert-f32-to-vector-f32"/>
  <link from="energy" to="convert-energy-to-vector"/>


  <node name="energy-normalization" 
	filter="signal-normalization"
	type="divide-by-mean"
	length="infinite" 
	right="infinite"/>
  <link from="convert-energy-to-vector" to="energy-normalization"/>


  <node name="convert-energy-vector-to-scalar" 
	filter="generic-convert-vector-f32-to-f32"/>
  <link from="energy-normalization" to="convert-energy-vector-to-scalar"/>



<!--
  Warping factor classificator
-->
  <node name="unwarped-synchronization" 
	filter="generic-synchronization"/>
  <link from="unwarped-linear-transform" to="unwarped-synchronization:target"/>
  <link from="convert-energy-vector-to-scalar" to="unwarped-synchronization"/>


<!--
  Determine warping factor from unwarped Plps
  *.warping-factor-recognizer.class-label-file=
  *.warping-factor-recognizer.likelihood-function.file=
  *.warping-factor-recognizer.likelihood-function.feature-scorer-type=diagonal-maximum
-->
  <node name="warping-factor-recognizer" 
	filter="signal-bayes-classification"/>
  <link from="unwarped-synchronization" to="warping-factor-recognizer:feature-score-weight"/>
  <link from="unwarped-synchronization:target" to="warping-factor-recognizer"/>



<!-- 
  Warped Plps
-->
  <!-- 
	8000 Hz -> 19.708905 Bark; #filters 20 -> spacing = 0.93853
	4000 Hz -> 15.575071 Bark; #filters 15 -> spacing = 0.973442 
  -->
  <node name="warped-filterbank" 
	filter="signal-filterbank"
        warping-function="nest(linear-2($input(warping-factor), 0.875), bark)"
	type="trapeze" 
	filter-width="3.8" 
	spacing="0.93853" 
	boundary="include-boundary"/>
  <link from="power-spectrum" to="warped-filterbank"/>
  <link from="warping-factor-recognizer" to="warped-filterbank:warping-factor"/>


  <node name="warped-split-filterbank" 
	filter="generic-vector-f32-split"/>
  <link from="warped-filterbank" to="warped-split-filterbank"/>


  <node name="warped-reverse-split-filterbank" 
	filter="generic-vector-f32-split"
	reverse="true"/>
  <link from="warped-filterbank" to="warped-reverse-split-filterbank"/>


  <node name="warped-copy-first-last-filterbank" 
	filter="generic-vector-f32-concat"/>
  <link from="warped-split-filterbank:0" to="warped-copy-first-last-filterbank:first"/>
  <link from="warped-filterbank" to="warped-copy-first-last-filterbank:middle"/>
  <link from="warped-reverse-split-filterbank:0" to="warped-copy-first-last-filterbank:last"/>


  <node name="warped-equal-loudness-preemphasis" 
	filter="signal-vector-f32-continuous-transform"
	f="nest(nest(disc-to-cont, invert(bark)), equal-loudness-preemphasis)" 
	operation="multiplies"/>
  <link from="warped-copy-first-last-filterbank" to="warped-equal-loudness-preemphasis"/>


  <node name="warped-intensity-loudness-law" 
	filter="generic-vector-f32-power"
	value="0.33"/>
  <link from="warped-equal-loudness-preemphasis" to="warped-intensity-loudness-law"/>


  <node name="warped-autocorrelation" 
	filter="signal-cosine-transform"
	nr-outputs="17" 
	input-type="N-plus-one" 
	normalize="true"/>
  <link from="warped-intensity-loudness-law" to="warped-autocorrelation"/>


  <node name="warped-autoregression" 
	filter="signal-autocorrelation-to-autoregression"/>
  <link from="warped-autocorrelation" to="warped-autoregression"/>				


  <node name="warped-linear-prediction-cepstrum" 
	filter="signal-autoregression-to-cepstrum"
	nr-outputs="16"/>
  <link from="warped-autoregression" to="warped-linear-prediction-cepstrum"/>


  <node name="warped-normalization" 
	filter="signal-normalization"
	type="mean-and-variance"/>
<!--
	length="infinite" 
	right="infinite"/>
-->
  <link from="warped-linear-prediction-cepstrum" to="warped-normalization"/>



<!--
  Energy synchronized with warped Plps
-->
  <node name="energy-synchronization"
	filter="generic-synchronization"/>
  <link from="warped-linear-prediction-cepstrum" to="energy-synchronization:target"/>
  <link from="convert-energy-vector-to-scalar" to="energy-synchronization"/>



<!--
  Output
-->
  <link from="warped-normalization" to="network:features"/>
  <link from="energy-synchronization" to="network:energies"/>

</network>
